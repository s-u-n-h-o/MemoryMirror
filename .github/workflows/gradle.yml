name: memoryproject CI

on:
  push:
    branches: [ "sunho" ]
  pull_request:
    branches: [ "sunho" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Checkout repository
        uses: actions/checkout@v4

        # application.properties 경로가 존재하는지 확인
      - name: Check if resources directory exists
        run: |
          if [ -d "/home/runner/work/MemoryMirror/MemoryMirror/Desktop/study/memoryMirror/src/main/resources" ]; then
            echo "src/main/resources directory exists!"
          else
            echo "src/main/resources directory does not exist!"
            exit 1
          fi

        # application.properties 생성
      - name: make application.properties
        run: |
          cd /home/runner/work/MemoryMirror/MemoryMirror/Desktop/study/memoryMirror/src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Gradle 빌드: JAR 파일 생성
      - name: Build with Gradle Wrapper
        run: |
          cd /home/runner/work/MemoryMirror/MemoryMirror/Desktop/study/memoryMirror
          ./gradlew clean build -x test

      # Docker 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/memory_repo:latest
          context: .
          file: /home/runner/work/MemoryMirror/MemoryMirror/Desktop/study/memoryMirror/Dockerfile

          # SSH 연결 및 EC2 인스턴스에 도커 이미지로 배포
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/memory_repo:latest
            docker-compose up -d
            docker image prune -f
